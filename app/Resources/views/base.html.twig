<!DOCTYPE html>
<html>
    <head>
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width, initial-scale=1">
        <title>{% block title %}Welcome!{% endblock %}</title>
        {% block stylesheets %}{% endblock %}
        <link rel="icon" type="image/x-icon" href="{{ asset('favicon.ico') }}" />

        <link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.2.0/css/font-awesome.min.css" rel="stylesheet">
        <link href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" rel="stylesheet">
        <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">

        <script
                src="http://code.jquery.com/jquery-3.3.1.min.js"
                integrity="sha256-FgpCb/KJQlLNfOu91ta32o/NMZxltwRo8QtmkMRdAu8="
                crossorigin="anonymous"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js"></script>
        <script
                src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"
                integrity="sha256-VazP97ZCwtekAsvgPBSUwPFKdrwD3unUfSGVYrahUqU="
                crossorigin="anonymous"></script>

        <link href="{{ asset('assets/css/style.css') }}" rel="stylesheet">
    </head>
    <body class="app-body">
        {% block navigation %}
            <nav class="navbar navbar-inverse "> <!--navbar-fixed-top-->
                <div class="container-fluid">
                    <div class="navbar-header">
                        <a class="navbar-brand" href="/calendarevent">Eevent</a>
                    </div>
                    <ul class="nav navbar-nav">
                    </ul>
                    {% if app.user %}
                        <div class="navbar-form navbar-right">
                            <div class="row">
                                <div class="dropdown">
                                    <a class="btn btn-default dropdown-toggle" type="button" data-toggle="dropdown"><i class="glyphicon glyphicon-user"></i>   Logged in as {{ app.user }}
                                        </a>
                                    <ul class="dropdown-menu">
                                        <li><a href="/admin/logout">Logout!</a></li>
                                    </ul>
                                </div>

                            </div>
                        </div>
                    {% else %}
                    <form id="signin" class="navbar-form navbar-right" action="{{ path("sonata_user_admin_security_check") }}" method="post" role="form">
                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-user"></i></span>
                            <input class="form-control"
                                   id="username"
                                   name="_username"
                                   placeholder="{{ 'security.login.username'|trans({}, 'SonataUserBundle') }}"
                                   required="required"
                                   type="text"/>
                        </div>

                        <div class="input-group">
                            <span class="input-group-addon"><i class="glyphicon glyphicon-lock"></i></span>
                            <input class="form-control"
                                   id="password"
                                   name="_password"
                                   placeholder="{{ 'security.login.password'|trans({}, 'SonataUserBundle') }}"
                                   required="required"
                                   type="password"/>
                        </div>

                        <button type="submit" class="btn btn-primary">{{ 'security.login.submit'|trans({}, 'FOSUserBundle') }}</button>
                    </form>
                    {% endif %}
                </div>
            </nav>
        {% endblock %}
        <div class="container">
            {% block body %}{% endblock %}
        </div>
        {% block javascripts %}{% endblock %}
        <script type="text/javascript">
            /*document.getElementById('button').addEventListener('click',function(){
                if ('Notification' in window) {
                    let ask = Notification.requestPermission();
                    ask.then( permission => {
                        if ( permission === "granted" ) {
                        let msg = new Notification( "Incoming notification!", {
                            body: 'You have a new message.',
                            icon: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/515428/skype_icon.png'
                        });
                        msg.addEventListener( "click", event => {
                            alert( "Click received" );
                    })
                    }
                });
                }
            });*/
            $.post("{{ path('current_calendar_event') }}", {'a':"A"}, function (data) {
                /*console.log(data);
                for (var i = 0; i < data.length; i++)
                {
                    console.log((new Date(data[i].start)).getTime());
                }*/
                var d = new Date();
                //console.log('local' + d.getTime());

                var myVar = setInterval(myTimer, 1000);
                //myTimer();
                var boolArr = {};
                for (var i = 0; i < data.length; i++) {
                    boolArr[data[i].entityId] = false;
                }
                function myTimer() {
                    var d = new Date();
                    for (var i = 0; i < data.length; i++)
                    {
                        //console.log((new Date(data[i].start)).getTime() -d.getTime() < 1000 * 60 * 2); //two minuts before
                        if((new Date(data[i].start)).getTime() -d.getTime() < 1000 * 60 * 2 &&
                            (new Date(data[i].start)).getTime() -d.getTime() > 0 &&
                            boolArr[data[i].entityId] == false) {
                            console.log((new Date(data[i].start)).getTime());
                            boolArr[data[i].entityId] = true

                            ShowNotification(data[i].title, "");
                        }
                    }
                }
            });
            function ShowNotification(title, message) {
                if ('Notification' in window) {
                    let ask = Notification.requestPermission();
                    ask.then( permission => {
                        if ( permission === "granted" ) {
                        let msg = new Notification( "Incoming notification!", {
                            body: title,
                            icon: 'https://s3-us-west-2.amazonaws.com/s.cdpn.io/515428/skype_icon.png'
                        });
                        msg.addEventListener( "click", event => {
                            alert( "Click received" );
                    })
                    }
                });}
            }


        </script>
    </body>
</html>
