{% extends 'base.html.twig' %}

{% block stylesheets %}
    <link rel="stylesheet" href="{{ asset('assets/fullcalendar/css/fullcalendar/fullcalendar.min.css') }}" />
{% endblock %}

{% block body %}
    <div id="calendar-holder"></div>
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="myModalLabel">Modal title</h4>
                </div>
                <div class="modal-body" >
                    <!--{{ form_start(form) }}
                    {{ form_widget(form) }}
                    <input type="submit" value="Create" />
                    {{ form_end(form) }}-->
                    <form class="col-md-12" id="calendar_event_form">
                        <input type="hidden" name="entityId">
                        <div id="basic_calendar_event_form">
                            <div class="row" >
                                {#<div class="col-md-2">
                                    <label>Title :</label>
                                </div>#}
                                <div class="col-md-12">
                                    <label>Title :</label>
                                    <input class="form-control" type="text" name="title">
                                </div>
                            </div>
                            <div class="col-md-12 spacer"></div>
                            <div class="row">
                                <div class="col-md-12">
                                    <label>Description:</label>
                                    <textarea class="form-control" name="description"></textarea>
                                </div>
                            </div>
                            <div class="col-md-12 spacer"></div>
                            <div class="row">
                                <div class="col-md-3">
                                    <input class="form-check-input" type="checkbox" name="allDay" onclick="allDayToggle('time_chooser',this)">
                                    <label>All Day</label>
                                </div>
                                <div id="time_chooser" class="col-md-9">
                                    <div class="col-md-2">
                                        <label>From:</label>
                                    </div>
                                    <div class="col-md-4">
                                        <input class="form-control" type="time" name="startTime">
                                    </div>
                                    <div class="col-md-2">
                                        <label>To:</label>
                                    </div>
                                    <div class="col-md-4">
                                        <input  class="form-control" type="time" name="endTime">
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-12 spacer"></div>
                            <div clas="row">
                                {#<div class="col-md-12">#}
                                <div class="col-md-3">
                                    <label>Category:</label>
                                </div>
                                <div class="col-md-9">
                                    <select name="color" class="form-control">
                                        <option>Meeting</option>
                                        <option value="#424242">Lecture</option>
                                        <option value="#05693B">Something else</option>
                                    </select>
                                </div>
                                {#</div>#}
                            </div>
                            <div class="col-md-12 spacer"></div>
                        </div>
                        <!--<div class="col-md-12">
                            <a href="javascript:void(0)" data-toggle="collapse" data-target="#advanced_calendar_event_form">Advanced options</a>
                        </div>
                        <div id="advanced_calendar_event_form" class="collapse">
                            <div class="col-md-6">
                                <label>Title:</label>
                                <input class="form-control" type="text" name="class">
                            </div>
                            <div class="col-md-6">
                                <input class="form-check-input" type="checkbox" name="nesto">
                                <label>All Day</label>
                            </div>
                        </div>-->
                        <input type="hidden" name="start" id="calendar_event_form_start">
                        <input type="hidden" name="end" id="calendar_event_form_end">
                    </form>
                </div>
                <div class="modal-footer">
                    <button id="modalCloseButton" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    <button id="createEventButton" style="display: none;" onclick="createNewCalendarEvent()" type="button" class="btn btn-primary">Create new event</button>
                    <button id="editEventButton" style="display: none;" onclick="updateCalendarEvent()" type="button" class="btn btn-primary">Save changes</button>
                </div>
            </div>
        </div>
    </div>
{% endblock %}


{% block javascripts %}
    <!--<script type="text/javascript" src="{{ asset('assets/fullcalendar/js/fullcalendar/lib/jquery.min.js') }}"></script>-->
    <script type="text/javascript" src="{{ asset('assets/fullcalendar/js/fullcalendar/lib/moment.min.js') }}"></script>
    <script type="text/javascript" src="{{ asset('assets/fullcalendar/js/fullcalendar/fullcalendar.min.js') }}"></script>
    <!--<script type="text/javascript" src="{{ asset('assets/fullcalendar/js/fullcalendar/fullcalendar.default-settings.js') }}"></script>-->
    <script type="text/javascript">

        var currentEventEditing;
        /*$(function () {
            $('#calendar-holder').fullCalendar({
                header: {
                    left: 'prev, next',
                    center: 'title',
                    right: 'month, basicWeek, basicDay,'
                },
                lazyFetching: true,
                timeFormat: {
                    agenda: 'h:mmt',
                    '': 'h:mmt'
                },
                eventStartEditable:{
                    default:true
                },
                eventSources: [
                    {
                        url: '{{ path("load_calendar_event") }}',
                        type: 'POST',
                        data: {},
                        error: function () {}
                    }
                ],
                eventDrop: function (event, dayDelta, minuteDelta, allDay, revertFunc, jsEvent, ui, view) {
                    console.log(event);
                },

                dayClick: function(day) {
                    console.log(day);
                    alert('a day has been clicked!');
                }

            });
        });*/

        /*function EditEvent() {

            alert("edit event");

            return false;
        }*/

        $(document).ready(function() {
            function UpdateModalFields(event)
            {
                currentEventEditing = event;
                var inputs = $('#calendar_event_form :input');
                //console.log(inputs.filter(input => input.name=="title"));
                $(inputs[0]).val(event.entityId);
                $(inputs[1]).val(event.title);
                $(inputs[2]).text(event.description);
                $(inputs[3]).checked = event.allDay;
                $(inputs[4]).val(event.start.toDate().time);
                $(inputs[5]).val(event.end.toDate().time);
                $(inputs[6]).val(event.color);

                $('#calendar_event_form_start').val(event.start.toDate().toUTCString());
                $('#calendar_event_form_end').val(event.end.toDate().toUTCString());

                $('#editEventButton').show();
                $('#myModal').modal('show');
            }



            if(localStorage.getItem('currentView') != "undefined")
            {
                $('#calendar').fullCalendar('changeView', localStorage.getItem('currentView'));
            }

            $('#calendar-holder').fullCalendar({
                header: {
                    left: 'prev,next today',
                    center: 'title',
                    right: 'month, basicWeek, basicDay,agendaWeek,agendaDay'
                },

                navLinks: true, // can click day/week names to navigate views

                selectable: true,
                selectHelper: true,
                eventClick: function(event, element)
                {
                    if($('#editEventId-'+event.entityId).is(':hover'))
                    {
                        UpdateModalFields(event);
                    }
                },
                select: function(start, end, jsEvent) {

                    //console.log(jsEvent.originalEvent.clientX);


                    //var top = jsEvent.originalEvent.clientY;
                    //modal.css("top",top);

                   // var windowWidth = $(window).width();
                    //var leftOffset = parseInt(jsEvent.originalEvent.clientX)-(parseInt(windowWidth)/2);
                    //modal.css("left",leftOffset);

                    jsEvent.preventDefault();
                    $('#calendar_event_form_start').val(start.toDate().toUTCString());
                    $('#calendar_event_form_end').val(end.toDate().toUTCString());
                    $('#createEventButton').show();


                    var modal = $('#myModal').modal('show');

                },
                editable: true,
                eventLimit: true, // allow "more" link when too many events
                eventSources: [
                    {
                        url: '{{ path("load_calendar_event") }}',
                        type: 'POST',
                        data: {},
                        error: function () {}
                    }
                ],
                eventRender: function(event, element) {
                    if(event.description)
                    {
                        var divTag = document.createElement("DIV");
                        divTag.appendChild(document.createTextNode(event.description));
                        divTag.className = "event-description";
                        element[0].appendChild(divTag);
                    }

                    var eventOptionsTag = $('<div class="event-options"></div>');
                    var editCalendarEventPath = "{{ path('calendarevent_edit', {'id':-1}) }}".replace("-1", event.entityId);
                    var aTagEdit = $('<a id="editEventId-'+event.entityId+'" class="event-edit-button" ><i class="fa fa-edit fa-lg"></i></a>');
                    aTagEdit.appendTo(eventOptionsTag);

                    var aTagDelete = $('<a class="event-delete-button"><i class="fa fa-trash-o fa-lg"></i></a>');
                    //console.log(event._id);
                    aTagDelete.attr('data-entity-id', event.entityId);
                    aTagDelete.attr('data-event-id', event._id);
                    aTagDelete.click(function()
                    {
                        var entityId = $(this).data('entity-id');
                        $.post("{{ path('delete_calendar_event') }}", {entityId: entityId});
                        var eventId = $(this).data('event-id');
                        $('#calendar-holder').fullCalendar('removeEvents', [eventId]);
                    });
                    aTagDelete.appendTo(eventOptionsTag);

                    eventOptionsTag.appendTo(element[0]);

                    //event.start.toDate().timezone().set
                },
                eventDrop: function (event, delta, revertFunc, jsEvent, ui, view) {

                    //console.log(event);
                    $.post("{{ path('edit_calendar_event') }}",
                        {editEvent:
                                {
                                    entityId: event.entityId,
                                    title: event.title,
                                    start: event.start.toDate().toUTCString(),
                                    end: event.end.toDate().toUTCString()
                                }
                        });
                },

                eventResize: function( event, delta, revertFunc, jsEvent, ui, view ) {
                    $.post("{{ path('edit_calendar_event') }}",
                        {editEvent:
                                {
                                    entityId: event.entityId,
                                    title: event.title,
                                    start: event.start.toDate().toUTCString(),
                                    end: event.end.toDate().toUTCString()
                                }
                        });
                }

                /*viewRender: function( view, element ){
                    //localStorage.setItem('currentView', view);
                }*/

                /*dayRender: function (date,cell) {
                  /!* var td = $(cell);
                   var button = td.add( "button" ).addClass( "btn btn-info btn-circle btn-lg addCalendarEventButton" );
                    button.add("i").addClass("glyphicon glyphicon-plus");*!/
                  var btn = $(cell).append( "<button class='btn btn-info btn-circle btn-xs modalSubmitButton'><i class=\"glyphicon glyphicon-plus\"></i></button>" );
                  btn.hide();
                }*/
            });

        });

        function updateCalendarEvent() {
            console.log($('#calendar_event_form').serializeArray());
            var calendarEventForm = $('#calendar_event_form');
            var calendarEventFormArray = calendarEventForm.serializeArray();
            var editEvent = {};
            for(var i =0; i< calendarEventFormArray.length; i++)
            {
                editEvent[calendarEventFormArray[i].name] = calendarEventFormArray[i].value;
            }

            var view = $('#calendar-holder').fullCalendar('getView');
            console.log(view);
            if(['month', 'basicWeek', 'basicDay'].includes(view.type))
            {
                var startDate = new Date(editEvent.start);
                var startTimeArr = editEvent.startTime.split(":");
                if(startTimeArr[0].match(/^[0-9]+$/) != null && startTimeArr[1].match(/^[0-9]+$/) != null)
                    startDate.setHours(startTimeArr[0], startTimeArr[1]);

                editEvent.start = startDate.toUTCString();
                var endDate = new Date(editEvent.end);

                var endTimeArr = editEvent.endTime.split(":");
                if(endTimeArr[0].match(/^[0-9]+$/) != null && endTimeArr[1].match(/^[0-9]+$/) != null) {
                    endDate.setDate(endDate.getDate() - 1);
                    endDate.setHours(endTimeArr[0], endTimeArr[1]);
                }
                console.log(startDate);
                editEvent.end = endDate.toUTCString();

                delete editEvent.startTime;
                delete editEvent.endTime;
            }

            $.post("{{ path('edit_calendar_event') }}",
                {editEvent:
                        editEvent
                });
            currentEventEditing.title = editEvent.title;
            currentEventEditing.description = editEvent.description;
            currentEventEditing.color = editEvent.color;
            currentEventEditing.start = editEvent.start;
            currentEventEditing.end = editEvent.end;
            $('#calendar-holder').fullCalendar('updateEvent', currentEventEditing, true);
            $('#calendar-holder').fullCalendar('unselect');

            $('#myModal').modal('hide');
        }

        //var offset = new Date().getTimezoneOffset();
        //console.log("timezone" + offset);
        function createNewCalendarEvent() {
            console.log($('#calendar_event_form').serializeArray());
            var calendarEventForm = $('#calendar_event_form');
            var calendarEventFormArray = calendarEventForm.serializeArray();
            var newEvent = {};
            for(var i =0; i< calendarEventFormArray.length; i++)
            {
                newEvent[calendarEventFormArray[i].name] = calendarEventFormArray[i].value;
            }

            var view = $('#calendar-holder').fullCalendar('getView');
            console.log(view);
            if(['month', 'basicWeek', 'basicDay'].includes(view.type))
            {
                var startDate = new Date(newEvent.start);
                var startTimeArr = newEvent.startTime.split(":");
                if(startTimeArr[0].match(/^[0-9]+$/) != null && startTimeArr[1].match(/^[0-9]+$/) != null)
                    startDate.setHours(startTimeArr[0], startTimeArr[1]);

                newEvent.start = startDate.toUTCString();
                var endDate = new Date(newEvent.end);

                var endTimeArr = newEvent.endTime.split(":");
                if(endTimeArr[0].match(/^[0-9]+$/) != null && endTimeArr[1].match(/^[0-9]+$/) != null) {
                    endDate.setDate(endDate.getDate() - 1);
                    endDate.setHours(endTimeArr[0], endTimeArr[1]);
                }
                console.log(startDate);
                newEvent.end = endDate.toUTCString();

                delete newEvent.startTime;
                delete newEvent.endTime;
            }

            $.post("{{ path('new_calendar_event') }}",
                {newEvent:
                    newEvent
                });
            //newEvent.start = startDate;
            $('#calendar-holder').fullCalendar('renderEvent', newEvent, true);

            $('#calendar-holder').fullCalendar('unselect');

            //calendarEventForm.find("input, textarea").val("");

            $('#myModal').modal('hide');
        }

        $('#myModal').on('hidden.bs.modal', function () {
            var calendarEventForm = $('#calendar_event_form');
            calendarEventForm.find("input, textarea").val("");
            $('#editEventButton').hide();
            $('#createEventButton').hide();
        });

        $('#myModal').on('shown.bs.modal', function () {


            // get the viewport height
            var viewportHeight = $(window).height();
            console.log ('viewportHeight = ' + viewportHeight);


            // get the viewport width
            var viewportWidth = $(window).width();
            console.log ('viewportWidth = ' + viewportWidth);

            var modalDialogHeight = $(this).find('.modal-dialog').outerHeight(true);
            console.log ('modalDialogHeight = ' + modalDialogHeight);

            var modalDialogWidth = $(this).find('.modal-dialog').outerWidth(true);
            console.log ('modalDialogWidth = ' + modalDialogWidth);

            var parentHeight = $( window ).height();
            var modal = $('#myModal');
            var top = modal.offset().top;

            console.log('Top offset = ' + top);
            console.log('Parent height = '+ parentHeight);

            if(parseInt(top)+parseInt(modalDialogHeight)>parseInt(parentHeight)) {
                top=parseInt(parentHeight)-parseInt(modalDialogHeight);

                modal.css("top", top);
                console.log("Top offset changed to: "+top);
            }

            //When the browser window is being resized
            var modalContentWidthHeight = function () {

                var modalContentWidth = $('#myModal').find('.modal-content').outerWidth(true);
                console.log ('modalContentWidth = ' + modalContentWidth);

                var modalContentHeight = $('#myModal').find('.modal-content').outerHeight(true);
                console.log ('modalContentHeight = ' + modalContentHeight);
            };

            $(window).resize(modalContentWidthHeight);

        });

        /*$('#myform').on('submit', function(ev) {
            var modal = $('#myModal').modal('show');
            var button = $('#modalSubmitButton');
            var offset = button.offset();
            var top=offset.top;
            modal.css("top", top);

            var parentWidth = $( window ).width();
            var left = parseInt(offset.left)- (parseInt(parentWidth)/2 );
            modal.css("left",left);

            ev.preventDefault()});
*/
        $('.modalSubmitButton').click(function (ev) {
            var modal = $('#myModal').modal('show');
            var button = $(ev.target);
            var offset = button.offset();
            var top = offset.top;
            modal.css("top",top);

            var windowWidth = $(window).width();
            var leftOffset = parseInt(offset.left)-(parseInt(windowWidth)/2);
            modal.css("left",leftOffset);

            ev.preventDefault()
        });

        $('#modalCloseButton').click(function() {
            $('#myModal').modal('hide');
        });

        function allDayToggle (it, box) {
            var vis = (box.checked) ?  "none" : "block";
            document.getElementById(it).style.display = vis;
        }
    </script>
{% endblock %}